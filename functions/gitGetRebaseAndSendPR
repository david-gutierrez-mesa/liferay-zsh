function gitGetRebaseAndSendPR() {
  local pullRequest
  local usernameFrom
  local usernameTo
  local skipUpdateGitLiferay="false"
  local skipPoshiValidation="false"

  while [ "$1" != "" ]; do
    case $1 in
    -h | -help)
      _showHelp "$0"
      return 0
      ;;
    -pr)
      shift
      pullRequest="$1"
      ;;
    -uf)
      shift
      usernameFrom="$1"
      ;;
    -ut)
      shift
      usernameTo="$1"
      ;;
    -spv | -skipPoshiValidation)
      skipPoshiValidation="true"
      ;;
    -sud | -skipUpdateGitLiferay)
      skipUpdateGitLiferay="true"
      ;;
    *)
      echo "Invalid option"
      _showHelp "$0"
      return 0
      ;;
    esac
    shift
  done

  if [ -z "$pullRequest" ]; then
    echo "Add a Pull request number"
    echo " "
    _showHelp "$0"
  else
    PR_NUMBER=$pullRequest
    local FROM_USER
    local TO_USER
    if [ -z "$usernameFrom" ]; then
      FROM_USER=$GITHUB_USER
    else
      FROM_USER=$usernameFrom
    fi
    if [ -z "$usernameTo" ]; then
      TO_USER=$GITHUB_USER
    else
      TO_USER=$usernameTo
    fi
    gitMaster
    if [ "$skipUpdateGitLiferay" = "false" ]; then
      echo 'Updating git before rebase'
      updateGitLiferay
    fi

    gh pr -u $FROM_USER $PR_NUMBER || {
      echo 'Impossible to get PR ' $PR_NUMBER ' from user ' $FROM_USER
      return
    }
    echo "Rebasing"
    gitRebase || {
      echo 'Rebase failed. Fix rebase and continue manually with gitRebaseContinueAndSendPR'
      return
    }
    echo "Running Poshi validations"
    if [ "$skipPoshiValidation" = "false" ]; then
      poshiSFCommit || {
        echo 'Impossible to commit. Source Formatted failed'
        return
      }
    fi
    echo "Sending to me"
    local PR_TITLE
    PR_TITLE=$(gitGetPRTitle -pr $PR_NUMBER -u $FROM_USER)
    local PR_MESSAGE=""
    if [ "$FROM_USER" = "$TO_USER" ]; then
      PR_MESSAGE=$(gitGetPRMessage -pr $PR_NUMBER -u $FROM_USER)
    else
      PR_MESSAGE=$(gitGetPRMessageWitSender -pr $PR_NUMBER -u $FROM_USER)
    fi
    gh pr -s $TO_USER --title "$PR_TITLE" --description "$PR_MESSAGE"
    local OPENED_PR
    OPENED_PR=$(gitGetLastPRnumber)
    gitCloseRebasedPR -prtc $PR_NUMBER -prrb $OPENED_PR -u $FROM_USER
    git checkout pr-$PR_NUMBER
    unset PR_NUMBER
  fi
}

_showHelp() {
  echo "Function help:"
  echo "$1 [options]"
  echo " "
  echo "options:"
  echo "-h | -help,                         Show brief help"
  echo "-pr,                                Pull request number be rebased and resend. Mandatory"
  echo "-uf,                                User to get the PR from. If not set then $GITHUB_USER is used"
  echo "-ut,                                User to send the PR to. If not set then $GITHUB_USER is used"
  echo "-spv | -skipPoshiValidation),       Skip poshi validations"
  echo "-sud | -skipUpdateGitLiferay),      Skip update remote liferay repository before getting the PR and Rebase"

}

gitGetRebaseAndSendPR "$@"