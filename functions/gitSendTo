gitSendTo() {
  local runSF="true"
  local updatePullRequest="true"
  local updateJira="false"
  local username
  while [ "$1" != "" ]; do
    case $1 in
    -h | -help)
      _showHelp "$0"
      return 0
      ;;
    -u)
      shift
      username="$1"
      ;;
    -supr | -skipUpdatePullRequest)
      updatePullRequest="false"
      ;;
    -uj | -updateJiraIssue)
      updateJira="true"
      ;;
    -ssf | -skipSF)
      runSF="false"
      ;;
    esac
    shift
  done
  if [ -z "$username" ]; then
    echo "Add a git user please"
    echo " "
    _showHelp "$0"
    return 0
  fi
  if [ -z "$(git status --porcelain)" ]; then
    if [ "$runSF" = "true" ]; then
      poshiSFCommit || {
        echo 'Impossible to commit. Source Formatted failed'
        return
      }
    else
      echo "Skipping Poshi Validation and SF"
    fi
    local LPS_ID
    local CURRENT_REPO
    CURRENT_REPO=$(gitGetCurrentRepo)
    if isThisALiferayRepo; then
      LPS_ID=$(git log -1 --pretty=%B | cut -d " " -f 1)
    else
      updateJira="false"
      updatePullRequest="false"
    fi
    local NEW_PR_URL
    if [ "$updatePullRequest" = "true" ]; then
      local LPS_SUMMARY
      LPS_SUMMARY=$(jiraGetIssueSummary -ji "$LPS_ID")
      local PR_TITLE="$LPS_ID $LPS_SUMMARY"
      local PR_MESSAGE="$JIRA_URL/browse/$LPS_ID"
      gitDeleteRemoteBranch
      gitPush
      NEW_PR_URL=$(gh pr create --repo "$username"/"$CURRENT_REPO" --title "$PR_TITLE" --body "$PR_MESSAGE" | tail -1)
    else
      echo "Skipping Pull Request update with Jira info"
      gitDeleteRemoteBranch
      gitPush
      NEW_PR_URL=$(gh pr create --repo "$username"/"$CURRENT_REPO" --fill | tail -1)
    fi
    open "$NEW_PR_URL"
    if [ "$updateJira" = "true" ]; then
      local OPENED_PR
      OPENED_PR=$(gitGetLastPRnumber -u "$username" | sed 's/^.\{1\}//')
      local PR_URL='https://github.com/'$username'/liferay-portal/pull/'$OPENED_PR
      local TRANSITION_CODE_REQUEST_REVIEW="71"
      jira mark "$LPS_ID" "$TRANSITION_CODE_REQUEST_REVIEW"
      if [[ "$LPS_ID" == LPS* ]]; then
        jira comment "$LPS_ID" "PR send $PR_URL"
      else
        jira comment "$LPS_ID" "PR send $PR_URL"
      fi
    else
      echo "Skipping Jira Issue update"
    fi
  else
    echo "You have uncommitted changes. Commit before try to send"
  fi
}

_showHelp() {
  echo "Function help:"
  echo "$1 [options]"
  echo " "
  echo "options:"
  echo "-h | -help,                     Show brief help"
  echo "-u,                             Git use to send the PR. Mandatory"
  echo "-supr | -supdatePullRequest,    Don't update PR with info get from LPS extracted from last commit"
  echo "-uj | -updateJiraIssue,        Update of Jira ticket from last commit. If you have more than one LPS in your commits you must update the other ones manually"
  echo "-ssf | -skipSF,                 Skip Poshi validation and Source Formatter"
}

gitSendTo "$@"
