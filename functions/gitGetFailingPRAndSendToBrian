function gitGetFailingPRAndSendToBrian() {

  local PR_NUMBER_TO_BCHAN
  local FROM_USER

  while [ "$1" != "" ]; do
    case $1 in
    -h | -help)
      _showHelp "$0"
      return 0
      ;;
    -pr)
      shift
      PR_NUMBER_TO_BCHAN="$1"
      ;;
    -u)
      shift
      FROM_USER="$1"
      ;;
    *)
      echo "Invalid option"
      _showHelp "$0"
      return 0
      ;;
    esac
    shift
  done

  if [ -z "$PR_NUMBER_TO_BCHAN" ]; then
    echo "Enter a PR number"
    echo " "
    _showHelp "$0"
    return 0
  fi
    if [ -z "$FROM_USER" ]; then
      FROM_USER=$GITHUB_USER
    fi

    # shellcheck disable=SC2086
    echo 'Getting PR' $PR_NUMBER_TO_BCHAN 'from user' $FROM_USER

    gitMaster
    gitFetchBrians
    gh pr checkout "$PR_NUMBER_TO_BCHAN" --repo "$FROM_USER"/"$REPO" || {
      echo 'Impossible to get PR ' "$PR_NUMBER_TO_BCHAN" ' from user ' $FROM_USER
      return
    }
    echo "Rebasing"
    gitRebaseBrian || {
      echo 'Rebase failed. Fix rebase and continue manually with gitRebaseBriansContinueAndSendPR'
      return
    }
    echo "Running Poshi validations"
    poshiSFCommit || {
      echo 'Impossible to commit. Source Formatted failed'
      return
    }
    echo "Sending to Brian"
    local PR_TITLE
    local PR_MESSAGE
    local PR_MESSAGE
    PR_TITLE=$(gitGetPRTitle -pr "$PR_NUMBER_TO_BCHAN" -u "$FROM_USER")
    if [ "$FROM_USER" = "$GITHUB_USER" ]; then
      PR_MESSAGE=$(gitGetPRMessage -pr "$PR_NUMBER_TO_BCHAN" -u "$FROM_USER")
    else
      PR_MESSAGE=$(gitGetPRMessageWitSender -pr "$PR_NUMBER_TO_BCHAN" -u "$FROM_USER")
    fi
    gh pr create --repo "brianchandotcom/$REPO" --title "$PR_TITLE" --description "$PR_MESSAGE"
    unset PR_NUMBER_TO_BCHAN
}

_showHelp() {
  echo "Function help:"
  echo "$1 [options]"
  echo " "
  echo "options:"
  echo "-h | -help,     Show brief help"
  echo "-pr,            Pull request number to get. Mandatory"
  echo "-u,             Git user to get the PR from. If not set $GITHUB_USER is used"
}

gitGetFailingPRAndSendToBrian "$@"