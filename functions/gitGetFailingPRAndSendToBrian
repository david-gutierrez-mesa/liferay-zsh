function gitGetFailingPRAndSendToBrian() {

  local CURRENT_REPO
  CURRENT_REPO=$(gitGetCurrentRepo)
  local FROM_USER=$GITHUB_USER
  local PR_NUMBER_TO_BCHAN
  local runSF="false"

  if [ "$CURRENT_REPO" = "$REPO_DXP" ]; then
    FROM_USER=$LIFERAY_GITHUB_USER
  fi

  while [ "$1" != "" ]; do
    case $1 in
    -h | -help)
      _showHelp "$0"
      return 0
      ;;
    -pr)
      shift
      PR_NUMBER_TO_BCHAN="$1"
      ;;
    -u)
      shift
      FROM_USER="$1"
      ;;
    -sf | -SF)
      runSF="true"
      ;;
    *)
      echo "Invalid option"
      _showHelp "$0"
      return 0
      ;;
    esac
    shift
  done

  if isThisALiferayRepo; then
    if [ -z "$PR_NUMBER_TO_BCHAN" ]; then
      echo "Enter a PR number"
      echo " "
      _showHelp "$0"
      return 0
    fi
      PR_BRANCH=$(gitGetPRDestinationBranch -pr "$PR_NUMBER_TO_BCHAN" -u "$FROM_USER")

      gitMaster
      git checkout "${PR_BRANCH}"
      git pull

      echo 'Getting PR' "$PR_NUMBER_TO_BCHAN" 'from user' "$FROM_USER"
      gh pr checkout "$PR_NUMBER_TO_BCHAN" --repo "$FROM_USER"/"$CURRENT_REPO" || {
        echo 'Impossible to get PR ' "$PR_NUMBER_TO_BCHAN" ' from user ' "$FROM_USER"
        return 1
      }
      gitFetchBrians -br "$PR_BRANCH"
      echo "Rebasing"
      gitRebaseBrian -br "$PR_BRANCH" || {
        echo 'Rebase failed. Fix rebase and continue manually with gitRebaseBriansContinueAndSendPR'
        return 1
      }
      if [ "$runSF" = "true" ]; then
        poshiSFCommit || {
          echo 'Impossible to commit. Source Formatted failed'
          return 1
        }
      else
        echo "Skipping Poshi Validation and SF"
      fi
      echo "Sending to Brian"
      local PR_TITLE
      local PR_MESSAGE
      PR_TITLE=$(gitGetPRTitle -pr "$PR_NUMBER_TO_BCHAN" -u "$FROM_USER")
      PR_MESSAGE=$(gitGetPRMessage -pr "$PR_NUMBER_TO_BCHAN" -u "$FROM_USER")

      if [ "$runSF" = "true" ]; then
        gitPush
      else
        gitPush -ssf
      fi
      NEW_PR_URL=$(gh pr create --repo "brianchandotcom/$CURRENT_REPO" --base "$PR_BRANCH" --title "$PR_TITLE" --body "$PR_MESSAGE" | tail -1)
      NEW_PR_NUMBER=${NEW_PR_URL##*/}

      gh issue comment "$PR_NUMBER_TO_BCHAN" --repo "$FROM_USER"/"$CURRENT_REPO" --body "Failing tests are not related to the changes. It's safe to send to BChan."
      gh issue edit "$PR_NUMBER_TO_BCHAN" --repo "$FROM_USER"/"$CURRENT_REPO" --add-label "passed_review" --remove-label "failed_review,waiting_for_dev"
      gh issue comment "$PR_NUMBER_TO_BCHAN" --repo "$FROM_USER"/"$CURRENT_REPO" --body "See ${NEW_PR_URL}"
      gh issue comment "$PR_NUMBER_TO_BCHAN" --repo "$FROM_USER"/"$CURRENT_REPO" --body "ci:close"
      gh issue comment "$NEW_PR_NUMBER" --repo "brianchandotcom/$CURRENT_REPO" --body "Validation is done at https://github.com/${FROM_USER}/${CURRENT_REPO}/pull/${PR_NUMBER_TO_BCHAN}"

      unset PR_NUMBER_TO_BCHAN
      open "$NEW_PR_URL"
    else
       echo "This is not a liferay-portal. Can not send to Brian"
    fi
}

_showHelp() {
  echo "Function help:"
  echo "$1 [options]"
  echo " "
  echo "options:"
  echo "-h | -help,     Show brief help"
  echo "-pr,            Pull request number to get. Mandatory"
  echo "-sf | -SF,      To run validation and Source Formatter"
  echo "-u,             Git user to get the PR from. If not set $GITHUB_USER is used"
}

gitGetFailingPRAndSendToBrian "$@"